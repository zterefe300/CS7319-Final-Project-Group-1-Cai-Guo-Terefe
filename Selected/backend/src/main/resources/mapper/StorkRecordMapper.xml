<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.selected.inventory_dashboard.persistence.dao.StorkRecordMapper">
  <resultMap id="BaseResultMap" type="com.selected.inventory_dashboard.persistence.entity.StorkRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="itemId" jdbcType="INTEGER" property="itemid" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="optType" jdbcType="BIT" property="opttype" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from storkRecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.selected.inventory_dashboard.persistence.entity.StorkRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into storkRecord (itemId, quantity, optType, 
      operator, create_time, update_time
      )
    values (#{itemid,jdbcType=INTEGER}, #{quantity,jdbcType=INTEGER}, #{opttype,jdbcType=BIT}, 
      #{operator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.selected.inventory_dashboard.persistence.entity.StorkRecord">
    update storkRecord
    set itemId = #{itemid,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      optType = #{opttype,jdbcType=BIT},
      operator = #{operator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, itemId, quantity, optType, operator, create_time, update_time
    from storkRecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, itemId, quantity, optType, operator, create_time, update_time
    from storkRecord
  </select>
</mapper>